{"version":3,"file":"component---src-pages-portfolio-tsx-d9688baacad5b7a85de7.js","mappings":"oJAKMA,EAAe,kBAAMC,EAAAA,cAAAA,UAAAA,CAASC,UAAU,WAC5CD,EAAAA,cAAAA,UAAAA,CAASC,UAAU,oCACjBD,EAAAA,cAAAA,KAAAA,KAAAA,aAGAA,EAAAA,cAAAA,IAAAA,KAAAA,uBAWEE,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAKC,EAAP,EAAOA,MAAP,OAA6BJ,EAAAA,cAAAA,UAAAA,CAASC,UAAU,mCAAmCI,IAAKF,GACnGH,EAAAA,cAAAA,KAAAA,KAAKI,GACLJ,EAAAA,cAAAA,MAAAA,CAAKM,MAAO,CAACC,SAAU,WAAYC,QAAS,YAC1CR,EAAAA,cAAAA,SAAAA,CAAQM,MAAO,CAACC,SAAU,WAAYE,MAAO,OAAQC,OAAQ,OAAQC,KAAM,IAAKC,IAAK,KAAMC,IAAKV,EAAKC,MAAM,uBAAuBU,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,OAKhQC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAuClB,EAAAA,cAAAA,UAAAA,CAASC,UAAU,WACvEiB,EAAMC,IAAIjB,KAkCb,UA9BkB,SAAC,GAAiD,IAAD,IAC3DgB,GAAqB,UADsC,EAA9CE,KACaC,sBAAL,mBAAqBC,0BAArB,eAAyCH,KAAI,SAAAI,GACtE,MAA8BA,GAAQ,GAA9BnB,EAAR,EAAQA,MAAOoB,EAAf,EAAeA,WACf,MAAO,CACLpB,MAAOA,GAAS,GAChBD,KAAKqB,aAAAA,EAAAA,EAAYC,cAAe,SAE9B,GACN,OACEzB,EAAAA,cAAC0B,EAAAA,EAAD,CAAQC,KAAK,aACX3B,EAAAA,cAACD,EAAD,MACAC,EAAAA,cAACiB,EAAD,CAASC,MAAOA","sources":["webpack://mit-filmmakers/./src/pages/portfolio.tsx"],"sourcesContent":["import * as React from \"react\";\nimport \"../styles/index.scss\";\nimport Layout from \"../components/Layout\";\nimport { graphql, PageProps } from \"gatsby\";\n\nconst Introduction = () => <section className=\"section\">\n  <article className=\"container content is-max-desktop\">\n    <h1>\n      Portfolio\n    </h1>\n    <p>\n      Placeholder text\n    </p>\n  </article>\n</section>\n\ninterface FilmProps {\n  url: string,\n  title: string,\n}\n\nconst Film = ({url, title}: FilmProps) => <article className=\"container content is-max-desktop\" key={url}>\n  <h2>{title}</h2>\n  <div style={{position: \"relative\", padding: \"30% 45%\"}}>\n    <iframe style={{position: \"absolute\", width: \"100%\", height: \"100%\", left: \"0\", top: \"0\"}} src={url} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\n    </iframe>\n  </div>\n</article>\n\nconst Display = ({ nodes }: { nodes: FilmProps[] }) => <section className=\"section\">\n  {nodes.map(Film)}\n</section>\n\n// markup\nconst Portfolio = ({ data }: PageProps<Queries.PortfolioQuery>) => {\n  const nodes: FilmProps[] = data.notionDatabase?.childrenNotionPage?.map(page => {\n    const { title, properties } = page || {};\n    return {\n      title: title || \"\",\n      url: properties?.YouTube_URL || \"\"\n    }\n  }) || [];\n  return (\n    <Layout slug=\"portfolio\">\n      <Introduction />\n      <Display nodes={nodes}/>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery Portfolio {\n  notionDatabase(title: {eq: \"Portfolio\"}) {\n    childrenNotionPage {\n      title\n      properties {\n        Category\n        YouTube_URL\n      }\n    }\n  }\n}\n`\n\nexport default Portfolio\n"],"names":["Introduction","React","className","Film","url","title","key","style","position","padding","width","height","left","top","src","frameBorder","allow","allowFullScreen","Display","nodes","map","data","notionDatabase","childrenNotionPage","page","properties","YouTube_URL","Layout","slug"],"sourceRoot":""}