{"version":3,"file":"component---src-pages-portfolio-tsx-6a180ebbfe3c7c647d6c.js","mappings":"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","sources":["webpack://mit-filmmakers/./src/components/Hero.tsx","webpack://mit-filmmakers/./src/pages/portfolio.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface HeroProps {\n    title: string,\n    subtitle: string,\n}\n\nexport default function ({ title, subtitle }: HeroProps) {\n    return <section className=\"hero\" style={{backgroundImage: \"linear-gradient(to bottom, #333, #666\"}}>\n    <div className=\"hero-body\" style={{maxWidth: \"1440px\", margin: \"auto\"}}>\n      <p className=\"title\" style={{color: \"#ddd\", textAlign: \"center\", margin: \"2rem\"}}>\n        { title }\n      </p>\n      <p className=\"subtitle\" style={{color: \"#ddd\", textAlign: \"center\"}}>\n        { subtitle }\n      </p>\n    </div>\n  </section>\n}\n","import * as React from \"react\";\nimport \"../styles/index.scss\";\nimport Layout from \"../components/Layout\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { formatDate } from \"../utils/metadata\";\nimport Hero from \"../components/Hero\";\n\ninterface FilmProps {\n  name: string,\n  category: string,\n  url: string,\n  premiered: Date,\n  directed_by: string,\n  written_by: string,\n  cinematography: string,\n  starring: string,\n}\n\nconst Film = ({url, name, premiered, directed_by, written_by, starring}: FilmProps) => <article className=\"container content\" key={url} style={{padding: \"2rem 0\"}}>\n  <div className=\"columns\">\n    <div className=\"column is-one-third\" style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\"}}>\n      <h2>{name}</h2>\n      <p>Premiered on { formatDate(premiered) }</p>\n      <p>\n        üé¨ Directed by &nbsp;<strong>{directed_by}</strong><br />\n        ‚úçÔ∏è Written by &nbsp;<strong>{written_by}</strong><br />\n        üåü Starring &nbsp;<strong>{starring}</strong>\n      </p>\n    </div>\n    <div className=\"column\">\n      <div style={{position: \"relative\", padding: \"30% 45%\"}}>\n        <iframe style={{position: \"absolute\", width: \"100%\", height: \"100%\", left: \"0\", top: \"0\"}} src={url} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\n        </iframe>\n      </div>\n    </div>\n  </div>\n</article>\n\nconst Display = ({ nodes }: { nodes: FilmProps[] }) => <section className=\"section\">\n  {nodes.map(Film)}\n</section>\n\nconst Portfolio = ({ data }: PageProps<Queries.PortfolioQuery>) => {\n  const nodes: FilmProps[] = [];\n  data.notionDatabase?.childrenNotionPage?.map(page => {\n    if (page && page.title && page.properties) {\n      const { Category, YouTube_URL, Premiered, Directed_by, Written_by, Cinematography, Starring } = page.properties;\n      if (Category && YouTube_URL && Premiered && Premiered.start)\n      nodes.push({\n        name: page.title,\n        category: Category,\n        url: YouTube_URL,\n        premiered: new Date(Premiered.start),\n        directed_by: Directed_by || \"\",\n        written_by: Written_by || \"\",\n        cinematography: Cinematography || \"\",\n        starring: Starring || \"\",\n      })\n    }\n  });\n  nodes.sort((a, b) => b.premiered.getTime() - a.premiered.getTime())\n  return (\n    <Layout slug=\"portfolio\">\n      <Hero title='Portfolio' subtitle={'Here are films created by our fellow students. Shout out to everybody! We hope you enjoy watching them üòâ'} />\n      <Display nodes={nodes}/>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery Portfolio {\n  notionDatabase(title: {eq: \"Portfolio\"}) {\n    childrenNotionPage {\n      title\n      properties {\n        Category\n        YouTube_URL\n        Premiered {\n          start\n        }\n        Directed_by\n        Written_by\n        Cinematography\n        Starring\n      }\n    }\n  }\n}\n`\n\nexport default Portfolio\n"],"names":["title","subtitle","React","className","style","backgroundImage","maxWidth","margin","color","textAlign","Film","url","name","premiered","directed_by","written_by","starring","key","padding","display","flexDirection","justifyContent","formatDate","position","width","height","left","top","src","frameBorder","allow","allowFullScreen","Display","nodes","map","data","notionDatabase","childrenNotionPage","page","properties","Category","YouTube_URL","Premiered","Directed_by","Written_by","Cinematography","Starring","start","push","category","Date","cinematography","sort","a","b","getTime","Layout","slug","Hero"],"sourceRoot":""}