{"version":3,"file":"component---src-pages-people-tsx-0014da23cc0769823732.js","mappings":"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","sources":["webpack://mit-filmmakers/./src/components/Hero.tsx","webpack://mit-filmmakers/./src/pages/people.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface HeroProps {\n    title: string,\n    subtitle: string,\n}\n\nexport default function ({ title, subtitle }: HeroProps) {\n    return <section className=\"hero\" style={{backgroundImage: \"linear-gradient(to bottom, #333, #666\"}}>\n    <div className=\"hero-body\" style={{maxWidth: \"1440px\", margin: \"auto\"}}>\n      <p className=\"title\" style={{color: \"#ddd\", textAlign: \"center\"}}>\n        { title }\n      </p>\n      <p className=\"subtitle\" style={{color: \"#ddd\", textAlign: \"center\", marginTop: 0}}>\n        { subtitle }\n      </p>\n    </div>\n  </section>\n}\n","import * as React from \"react\";\nimport \"../styles/index.scss\";\nimport { ReactElement } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Hero from \"../components/Hero\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport { graphql, PageProps } from \"gatsby\";\n\ninterface PersonProps {\n  name: string,\n  email: string,\n  affiliation: string,\n  major: string,\n  category: string,\n  position?: string,\n  photo: ReactElement\n}\n\nconst Person = ( {name, email, affiliation, major, photo, position }: PersonProps ) => <div key={name} className=\"card\" style={{margin: \"1.5rem\",overflow: \"hidden\", position: \"relative\", zIndex: 0}}>\n<div className=\"card-image\" style={{width: \"250px\", height: \"250px\", padding: 0}}>\n  {photo}\n</div>\n<div className=\"card-content\" style={{width: \"250px\", height: position ? \"205px\" : \"165px\"}}>\n  <div className=\"media\">\n    <div className=\"media-content\">\n      <p className=\"title is-5\">{name}</p>\n      {\n        position ? <p><span className=\"tag is-info is-light\">{position}</span></p> : <div></div>\n      }\n      <p className=\"subtitle is-6\"><a href={\"mailto:\" + email}>{email}</a></p>\n      <p>{affiliation}, {major}</p>\n    </div>\n  </div>\n</div>\n</div>\n\nconst Group = ({ category, nodes }: { category: string, nodes: PersonProps[] }) => <section className=\"section\">\n  <article className=\"container content\">\n    <h2>\n      { category }\n    </h2>\n    <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\"}}>\n      {nodes.map(x => <Person {...x}/>)}\n    </div>\n  </article>\n</section>\n\nconst People = ({ data }: PageProps<Queries.PeopleQuery>) => {\n  const nodes: PersonProps[] = data.notionDatabase?.childrenNotionPage?.map(page => {\n    const { title, properties, image } = page || {};\n    const imageData = image?.childImageSharp?.gatsbyImageData;\n    const photo = imageData ? <GatsbyImage image={imageData} alt={title || \"\"}/> : <StaticImage src={\"../images/mitao.jpg\"} alt=\"fallback\" />\n    return {\n      name: title || \"\",\n      email: properties?.EDU_Email || \"\",\n      affiliation: properties?.Affiliation || \"\",\n      major: properties?.Major || \"\",\n      category: properties?.Category || \"\",\n      position: properties?.Position || undefined,\n      photo: photo }\n  }) || [];\n  nodes.sort((a, b) => a.name.localeCompare(b.name));\n  const known_positions = [\n    [/^President/, 0],\n    [/^Vice President/, 1],\n    [/^Treasurer/, 2],\n    [/Chair$/, 3]\n  ] as const;\n  const get_rank = (s: string | undefined) => {\n    if (s === undefined) return 10;\n    for (const pair of known_positions) {\n      const [regex, rank] = pair;\n      if (regex.test(s)) {\n        if (/retired/.test(s)) return rank + .5;\n        return rank;\n      }\n    }\n    return 10;\n  }\n  const founders = nodes.filter(({ category }) => category === 'Founder');\n  founders.sort((a, b) => get_rank(a.position) - get_rank(b.position));\n  const officers = nodes.filter(({ category }) => category === 'Officer');\n  officers.sort((a, b) => get_rank(a.position) - get_rank(b.position));\n  const members = nodes.filter(({ category }) => category == 'Member');\n  const alumni = nodes.filter(({ category }) => category == 'Alumni');\n  return (\n    <Layout slug=\"people\">\n      <Hero title=\"People\" subtitle='' />\n      <Group category=\"Founders\" nodes={founders}/>\n      <Group category=\"Officers\" nodes={officers}/>\n      <Group category=\"Members\" nodes={members}/>\n      <Group category=\"Alumni\" nodes={alumni}/>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery People {\n  notionDatabase(title: {eq: \"People\"}) {\n    childrenNotionPage {\n      title\n      image {\n        childImageSharp {\n          gatsbyImageData(width: 250, height: 250, placeholder: BLURRED, formats: [AUTO, WEBP])\n        }\n      }\n      properties {\n        Affiliation\n        Category\n        EDU_Email\n        Major\n        Position\n      }\n    }\n  }\n}\n`\n\nexport default People\n"],"names":["title","subtitle","React","className","style","backgroundImage","maxWidth","margin","color","textAlign","marginTop","Person","name","email","affiliation","major","photo","position","key","overflow","zIndex","width","height","padding","href","Group","category","nodes","display","flexWrap","justifyContent","map","x","data","notionDatabase","childrenNotionPage","page","properties","image","imageData","childImageSharp","_image$childImageShar","gatsbyImageData","GatsbyImage","alt","StaticImage","src","EDU_Email","Affiliation","Major","Category","Position","undefined","sort","a","b","localeCompare","known_positions","get_rank","s","pair","regex","rank","test","founders","filter","officers","members","alumni","Layout","slug","Hero"],"sourceRoot":""}