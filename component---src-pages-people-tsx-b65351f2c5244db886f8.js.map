{"version":3,"file":"component---src-pages-people-tsx-b65351f2c5244db886f8.js","mappings":"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","sources":["webpack://mit-filmmakers/./src/components/Hero.tsx","webpack://mit-filmmakers/./src/pages/people.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface HeroProps {\n    title: string,\n    subtitle: string,\n}\n\nexport default function ({ title, subtitle }: HeroProps) {\n    return <section className=\"hero\" style={{backgroundImage: \"linear-gradient(to bottom, #333, #666\"}}>\n    <div className=\"hero-body\">\n      <p className=\"title\" style={{color: \"#ddd\", textAlign: \"center\", margin: \"2rem\"}}>\n        { title }\n      </p>\n      <p className=\"subtitle\" style={{color: \"#ddd\", textAlign: \"center\"}}>\n        { subtitle }\n      </p>\n    </div>\n  </section>\n}\n","import * as React from \"react\";\nimport \"../styles/index.scss\";\nimport { ReactElement } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Hero from \"../components/Hero\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport { graphql, PageProps } from \"gatsby\";\n\ninterface PersonProps {\n  name: string,\n  email: string,\n  affiliation: string,\n  major: string,\n  category: string,\n  position?: string,\n  photo: ReactElement\n}\n\nconst Person = ( {name, email, affiliation, major, photo, position }: PersonProps ) => <div key={name} className=\"card\" style={{margin: \"1.5rem\", padding: 0, overflow: \"hidden\", position: \"relative\", zIndex: 0}}>\n<div className=\"card-image\" style={{width: \"250px\", height: \"250px\", padding: 0}}>\n  {photo}\n</div>\n<div className=\"card-content\" style={{width: \"250px\", height: position ? \"205px\" : \"165px\", padding: \"1.5rem\"}}>\n  <div className=\"media\">\n    <div className=\"media-content\">\n      <p className=\"title is-5\" style={{marginBottom: \"1rem\"}}>{name}</p>\n      {\n        position ? <p><span className=\"tag is-info is-light\">{position}</span></p> : <div></div>\n      }\n      <p className=\"subtitle is-6\"><a href={\"mailto:\" + email}>{email}</a></p>\n      <p>{affiliation}, {major}</p>\n    </div>\n  </div>\n</div>\n</div>\n\nconst Group = ({ category, nodes }: { category: string, nodes: PersonProps[] }) => <section className=\"section\">\n  <article className=\"container content\">\n    <h2>\n      { category }\n    </h2>\n    <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", padding: 0}}>\n      {nodes.map(x => <Person {...x}/>)}\n    </div>\n  </article>\n</section>\n\nconst People = ({ data }: PageProps<Queries.PeopleQuery>) => {\n  const nodes: PersonProps[] = data.notionDatabase?.childrenNotionPage?.map(page => {\n    const { title, properties, image } = page || {};\n    const imageData = image?.childImageSharp?.gatsbyImageData;\n    const photo = imageData ? <GatsbyImage image={imageData} alt={title || \"\"}/> : <StaticImage src={\"../images/mitao.jpg\"} alt=\"fallback\" />\n    return {\n      name: title || \"\",\n      email: properties?.EDU_Email || \"\",\n      affiliation: properties?.Affiliation || \"\",\n      major: properties?.Major || \"\",\n      category: properties?.Category || \"\",\n      position: properties?.Position || undefined,\n      photo: photo }\n  }) || [];\n  nodes.sort((a, b) => a.name.localeCompare(b.name));\n  const officers = nodes.filter(({ category }) => category == 'Officer');\n  const members = nodes.filter(({ category }) => category == 'Member');\n  const alumni = nodes.filter(({ category }) => category == 'Alumni');\n  return (\n    <Layout slug=\"people\">\n      <Hero title='People' subtitle='' />\n      <Group category={'Officers'} nodes={officers}/>\n      <Group category={'Members'} nodes={members}/>\n      <Group category={'Alumni'} nodes={alumni}/>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery People {\n  notionDatabase(title: {eq: \"People\"}) {\n    childrenNotionPage {\n      title\n      image {\n        childImageSharp {\n          gatsbyImageData(width: 250, height: 250, placeholder: BLURRED, formats: [AUTO, WEBP])\n        }\n      }\n      properties {\n        Affiliation\n        Category\n        EDU_Email\n        Major\n        Position\n      }\n    }\n  }\n}\n`\n\nexport default People\n"],"names":["title","subtitle","React","className","style","backgroundImage","color","textAlign","margin","Person","name","email","affiliation","major","photo","position","key","padding","overflow","zIndex","width","height","marginBottom","href","Group","category","nodes","display","flexWrap","justifyContent","map","x","data","notionDatabase","childrenNotionPage","page","properties","image","imageData","childImageSharp","_image$childImageShar","gatsbyImageData","GatsbyImage","alt","StaticImage","src","EDU_Email","Affiliation","Major","Category","Position","undefined","sort","a","b","localeCompare","officers","filter","members","alumni","Layout","slug","Hero"],"sourceRoot":""}